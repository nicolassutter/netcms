{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/ConfigSchema",
  "definitions": {
    "ConfigSchema": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "type": "string"
        },
        "committer": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "email",
            "name"
          ],
          "additionalProperties": false
        },
        "content_dir": {
          "type": "string"
        },
        "assets_dir": {
          "type": "string"
        },
        "content_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentType"
          }
        }
      },
      "required": [
        "assets_dir",
        "committer",
        "content_dir",
        "content_types"
      ]
    },
    "ContentType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "format": {
          "$ref": "#/definitions/Format"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnyField"
          }
        },
        "title_field": {
          "type": "string",
          "description": "The `name` of the field that will be used as a single entity's title\n\nFor a \"post\" content type, a post has a `title` field (the title of the post). We could therefore set `title_field: title`, that way each post will use the `title` field as their identifier"
        }
      },
      "required": [
        "name",
        "format",
        "fields",
        "title_field"
      ],
      "additionalProperties": false
    },
    "Format": {
      "type": "string",
      "enum": [
        "json",
        "yml",
        "md"
      ]
    },
    "AnyField": {
      "anyOf": [
        {
          "$ref": "#/definitions/MediaField"
        },
        {
          "$ref": "#/definitions/TextField"
        },
        {
          "$ref": "#/definitions/RichField"
        },
        {
          "$ref": "#/definitions/SelectField"
        },
        {
          "$ref": "#/definitions/EmailField"
        }
      ]
    },
    "MediaField": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/FieldType"
        },
        "params": {
          "type": "object",
          "properties": {
            "accept": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "name",
        "params",
        "type"
      ],
      "additionalProperties": false
    },
    "FieldType": {
      "type": "string",
      "enum": [
        "text",
        "email",
        "select",
        "rich",
        "media"
      ]
    },
    "TextField": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/FieldType"
        },
        "params": {
          "$ref": "#/definitions/EmptyObject"
        }
      },
      "required": [
        "name",
        "params",
        "type"
      ],
      "additionalProperties": false
    },
    "EmptyObject": {
      "type": "object",
      "additionalProperties": false,
      "description": "Represents a strictly empty plain object, the `{}` value.\n\nWhen you annotate something as the type `{}`, it can be anything except `null` and `undefined`. This means that you cannot use `{}` to represent an empty plain object ([read more](https://stackoverflow.com/questions/47339869/typescript-empty-object-and-any-difference/52193484#52193484))."
    },
    "RichField": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/FieldType"
        },
        "params": {
          "$ref": "#/definitions/EmptyObject"
        }
      },
      "required": [
        "name",
        "params",
        "type"
      ],
      "additionalProperties": false
    },
    "SelectField": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/FieldType"
        },
        "params": {
          "type": "object",
          "properties": {
            "options": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SelectOption"
              }
            },
            "multiple": {
              "type": "boolean",
              "default": false
            }
          },
          "required": [
            "options"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "name",
        "params",
        "type"
      ],
      "additionalProperties": false
    },
    "SelectOption": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "label",
        "value"
      ],
      "additionalProperties": false
    },
    "EmailField": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/FieldType"
        },
        "params": {
          "$ref": "#/definitions/EmptyObject"
        }
      },
      "required": [
        "name",
        "params",
        "type"
      ],
      "additionalProperties": false
    }
  }
}